{
  "version": 3,
  "file": "example.js",
  "sourceRoot": "..",
  "sources": [
    "examples/example.litcoffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "OrgData example editor (based on Leisure)\n=========================================\nThis extends Data store and pushes parsing into the store instead of keeping\nit in the editing options and options delegate it to the store.\n\n    import * as Org from './org.js'\n    import * as DocOrg from './docOrg.js'\n    import * as Editor from './editor.js'\n\n    export {Editor, Org, DocOrg}\n\n    {\n      parseOrgMode\n      orgDoc\n      Source\n      Results\n      Headline\n      SimpleMarkup\n      Fragment\n    } = Org\n    {\n      orgDoc\n      getCodeItems\n      blockSource\n      blockOrg: docBlockOrg\n      ParsedCodeBlock\n      parseYaml\n    } = DocOrg\n    {\n      last\n      DataStore\n      DataStoreEditingOptions\n      blockText\n      posFor\n      escapeHtml\n      copyBlock\n      LeisureEditCore\n      set$\n    } = Editor\n\n    $ = Editor.$\n    #set$ $, (o)-> o instanceof $\n\n    orgEditing = null\n    plainEditing = null\n    data = null\n\n    export class OrgData extends DataStore\n      getBlock: (thing, changes)->\n        if typeof thing == 'object' then thing\n        else changes?.sets[thing] ? super(thing)\n      changesFor: (first, oldBlocks, newBlocks)->\n        changes = super first, oldBlocks, newBlocks\n        @linkAllSiblings changes\n        changes\n      load: (name, text)->\n        @makeChanges =>\n          @suppressTriggers => super name, text\n          @linkAllSiblings {first: @first, sets: @blocks, oldBlocks: [], newBlocks: @blockList()}\n          @trigger 'load'\n      parseBlocks: (text)-> parseOrgDoc text\n      nextSibling: (thing, changes)-> @getBlock @getBlock(thing, changes)?.nextSibling, changes\n      previousSibling: (thing, changes)-> @getBlock @getBlock(thing, changes).previousSibling, changes\n      reducePreviousSiblings: (thing, changes, func, arg)->\n        greduce @getBlock(thing, changes), changes, func, arg, (b)=> @getBlock b.previousSibling, changes\n      reduceNextSiblings: (thing, changes, func, arg)->\n        greduce @getBlock(thing, changes), changes, func, arg, (b)=> @getBlock b.nextSibling, changes\n      lastSibling: (thing, changes)-> @reduceNextSiblings thing, changes, ((x, y)-> y), null\n      firstSibling: (thing, changes)-> @reducePreviousSiblings thing, changes, ((x, y)-> y), null\n      parent: (thing, changes)-> @getBlock @firstSibling(thing, changes)?.prev, changes\n      properties: (thing)->\n        props = {}\n        bl = @getBlock thing\n        if bl.type != 'headline'\n          if bl.type == 'code'\n            _.defaults props, bl.codeAttributes\n            _.defaults props, bl.properties\n          else if bl.type == 'chunk' then _.defaults props, bl.properties\n          bl = @parent bl\n        while bl\n          @scrapePropertiesInto bl, props\n          bl = @parent bl\n        props\n      scrapePropertiesInto: (block, props)->\n        for child in @children block\n          if child.type == 'chunk' && child.properties && !_.isEmpty child.properties\n            _.defaults props, child.properties\n      firstChild: (thing, changes)->\n        if (block = @getBlock thing, changes) && (n = @getBlock block.next, changes) && !n.previousSibling\n          n\n      lastChild: (thing, changes)-> @lastSibling @firstChild(thing, changes), changes\n      children: (thing, changes)->\n        c = []\n        @reduceNextSiblings @firstChild(thing, changes), changes, ((x, y)-> c.push y), null\n        c\n\n`nextRight` returns the next thing in the tree after this subtree, which is just the\nnext sibling if there is one, otherwise it's the closest \"right uncle\" of this node\n\n      nextRight: (thing, changes)->\n        while thing\n          if sib = @nextSibling thing, changes then return sib\n          thing = @parent thing, changes\n        null\n\n`linkAllSiblings` -- modify changes so that the sibling links will be correct when the changes are applied.\n\n      linkAllSiblings: (changes)->\n        stack = []\n        parent = null\n        sibling = null\n        emptyNexts = {}\n        cur = @getBlock changes.first, changes\n        while cur\n          if cur.nextSibling then emptyNexts[cur._id] = cur\n          if cur.type == 'headline'\n            while parent && cur.level <= parent.level\n              [parent, sibling] = stack.pop()\n          else if cur.type == 'chunk' && cur.properties? && parent && !_(parent.propertiesBlocks).includes cur._id\n            if !parent.propertiesBlocks\n              parent.propertiesBlocks = []\n            parent.propertiesBlocks.push cur._id\n          if sibling\n            delete emptyNexts[sibling._id]\n            if sibling.nextSibling != cur._id\n              addChange(sibling, changes).nextSibling = cur._id\n            if cur.previousSibling != sibling._id\n              addChange(cur, changes).previousSibling = sibling._id\n          else if cur.previousSibling\n            delete addChange(cur, changes).previousSibling\n          sibling = cur\n          if cur.type == 'headline'\n            stack.push [parent, sibling]\n            parent = cur\n            sibling = null\n          cur = @getBlock cur.next, changes\n        for id, block of emptyNexts\n          delete addChange(block, changes).nextSibling\n\n    parseOrgDoc = (text)->\n      if text == '' then []\n      else orgDoc parseOrgMode(text.replace /\\r\\n/g, '\\n'), true\n\n    addChange = (block, changes)->\n      if !changes.sets[block._id]\n        changes.oldBlocks.push block\n        changes.newBlocks.push changes.sets[block._id] = copyBlock block\n      changes.sets[block._id]\n\n    greduce = (thing, changes, func, arg, next)->\n      if typeof changes == 'function'\n        next = arg\n        arg = func\n        func = changes\n      if thing && typeof arg == 'undefined'\n        arg = thing\n        thing = next thing\n      while thing\n        arg = func arg, thing\n        thing = next thing\n      arg\n\n    getId = (thing)-> if typeof thing == 'string' then thing else thing._id\n\n    class OrgEditing extends DataStoreEditingOptions\n      constructor: (data)->\n        super data\n        data.on 'load', => @editor.setHtml @editor.node[0], @renderBlocks()\n      blockLineFor: (node, offset)->\n        {block, offset} = @editor.blockOffset node, offset\n        @blockLine block, offset\n      blockLine: (block, offset)->\n        text = block.text.substring(0, offset)\n        lines = text.split('\\n')\n        line: lines.length\n        col: last(lines).length\n      lineInfo: (block, offset)->\n        if block\n          {line, col} = @blockLine block, offset\n          startBlock = block\n          docLine = line\n          while block.prev\n            block = @getBlock block.prev\n            docLine += block.text.split('\\n').length - 1\n          holder = @nodeForId startBlock._id\n          p = posFor @editor.domCursorForTextPosition(holder, offset)\n          line: docLine\n          col: col\n          blockLine: line\n          top: Math.round(p.top)\n          left: Math.round(p.left)\n        else {}\n      setEditor: (@editor)->\n        @editor.on 'moved', =>\n          {block, offset} = @editor.getSelectedBlockRange()\n          if block\n            {line, col, blockLine, top, left} = @lineInfo block, offset\n            if line\n              return @updateStatus \"line: #{numSpan line} col: #{numSpan col} block: #{block._id}:#{numSpan blockLine} top: #{numSpan top} left: #{numSpan left}\"\n          @updateStatus \"No selection\"\n\n    parent = (prev, next)->\n      prev.type == 'headline' && (next.type != 'headline' || prev.level < next.level)\n\n    siblings = (prev, next)->\n      (prev.type != 'headline' && next.type != 'headline') || (prev.type == next.type == 'headline' && prev.level == next.level)\n\n    class PlainEditing extends OrgEditing\n      nodeForId: (id)-> $(\"#plain-#{id}\")\n      idForNode: (node)-> node.id.match(/^plain-(.*)$/)?[1]\n      parseBlocks: (text)-> @data.parseBlocks text\n      renderBlock: (block)-> [\"<span id='plain-#{block._id}' data-block>#{escapeHtml block.text}</span>\", block.next]\n      updateStatus: (line)-> $(\"#plainStatus\").html line\n\n    class FancyEditing extends OrgEditing\n      changed: (changes)->\n        rendered = {}\n        for id, block of changes.removes\n          @removeBlock block\n        for block in changes.newBlocks\n          rendered[block._id] = true\n          @updateBlock block, changes.old[block._id]\n        for id, block of changes.sets\n          if !rendered[id] then @updateBlock block, changes.old[block._id]\n      nodeForId: (id)-> id && $(\"#fancy-#{getId id}\")\n      idForNode: (node)-> node.id.match(/^fancy-(.*)$/)?[1]\n      parseBlocks: (text)-> @data.parseBlocks text\n      removeBlock: (block)->\n        if (node = @nodeForId block._id).length\n          if block.type == 'headline'\n            content = node.children().filter('[data-content]')\n            content.children().filter('[data-block]').insertAfter(node)\n          node.remove()\n      updateBlock: (block, old)->\n        if (node = @nodeForId block._id).length\n          content = node.children().filter('[data-content]')\n          if block.type != old?.type || block.nextSibling != old?.nextSibling || block.previousSibling != old?.previousSibling || block.prev != old?.prev\n            if block.type != 'headline' && old.type == 'headline'\n              content.children().filter('[data-block]').insertAfter(node)\n            @insertUpdateNode block, node\n          if block.text != old?.text\n            if node.is '[data-headline]'\n              content.children().filter('[data-block]').insertAfter(node)\n            [html] = @renderBlock block, true\n            node = $(@editor.setHtml node[0], html, true)\n            content = node.children().filter('[data-content]')\n            if block.type == 'headline'\n              for child in @data.children block\n                content.append @nodeForId child._id\n        else\n          node = $(\"<div></div>\")\n          @insertUpdateNode block, node\n          [html] = @renderBlock block, true\n          @editor.setHtml node[0], html, true\n      insertUpdateNode: (block, node)->\n        if (prev = @nodeForId @data.previousSibling block)?.length then prev.after node\n        else if !block.prev then @editor.node.prepend(node)\n        else if !block.previousSibling && (parentNode = @nodeForId(block.prev))?.is(\"[data-headline]\")\n          parentNode.children().filter(\"[data-content]\").children().first().after node\n        else if (next = @nodeForId @data.nextSibling block)?.length then next.before node\n        else @editor.node.append(node)\n      renderBlock: (block, skipChildren)->\n        html = if block.type == 'headline'\n          \"<div #{blockAttrs block} contenteditable='false'>#{blockLabel block}<div contenteditable='true' data-content>#{contentSpan block.text, 'text'}#{if !skipChildren then (@renderBlock(child)[0] for child in @data.children(block) ? []).join '' else ''}</div></div>\"\n        else if block.type == 'code'\n          \"<span #{blockAttrs block}>#{blockLabel block}#{escapeHtml block.text}</span>\"\n        else \"<span #{blockAttrs block}>#{blockLabel block}#{escapeHtml block.text}</span>\"\n        [html, @data.nextSibling(block)?._id || !@data.firstChild(block) && block.next]\n      updateStatus: (line)-> $(\"#orgStatus\").html line\n\n    numSpan = (n)-> \"<span class='status-num'>#{n}</span>\"\n\n    blockLabel = (block)->\n      \"<span class='blockLabel' contenteditable='false' data-noncontent>[#{block.type} #{block._id}]</span>\"\n\n    blockAttrs = (block)->\n      extra = ''\n      if block.type == 'headline' then extra += \" data-headline='#{escapeAttr block.level}'\"\n      \"id='fancy-#{escapeAttr block._id}' data-block='#{escapeAttr block._id}' data-type='#{escapeAttr block.type}'#{extra}\"\n\n    contentSpan = (str, type)->\n      str = escapeHtml str\n      if str then \"<span#{if type then \" data-org-type='#{escapeAttr type}'\" else ''}>#{str}</span>\" else ''\n\n    escapeAttr = (str)->\n      if typeof str == 'string' then str.replace /['\"&]/g, (c)->\n        switch c\n          when '\"' then '&quot;'\n          when \"'\" then '&#39;'\n          when '&' then '&amp;'\n      else str\n\n    displayStructure = (data)->\n      parentStack = []\n      info = \"\"\n      level = 0\n      cur = data.getBlock data.first\n      prevParent = null\n      checks = nextSibling: {}, previousSibling: {}, prev: {}\n      check = cur\n      prev = null\n      while check\n        checks.nextSibling[check.previousSibling] = check._id\n        checks.previousSibling[check.nextSibling] = check._id\n        checks.prev[check.next] = check._id\n        prev = check\n        check = data.getBlock check.next\n      while cur\n        bad = []\n        if cur.nextSibling != checks.nextSibling[cur._id] then bad.push 'nextSibling'\n        if cur.previousSibling != checks.previousSibling[cur._id] then bad.push 'previousSibling'\n        if cur.prev != checks.prev[cur._id] then bad.push 'prev'\n        if !cur.previousSibling\n          p = cur\n          while p = data.parent p\n            level++\n        info += \"#{('   ' for i in [0...level]).join ''}#{cur._id}#{checkStructure cur, bad}: #{JSON.stringify cur.text}\\n\"\n        if !cur.nextSibling then level = 0\n        cur = data.getBlock cur.next\n      $(\"#blocks\").html info\n\n    checkStructure = (block, bad)->\n      if bad.length\n        ' <span class=\"err\">[' + (\"#{err}: #{block[err]}\" for err in bad).join(', ') + ']</span>'\n      else ''\n\n    $(document).ready ->\n      window.DATA = data = new OrgData()\n      data\n        .on 'change', (changes)-> displayStructure data\n        .on 'load', -> displayStructure data\n      window.ED = editor = new LeisureEditCore $(\"#fancyEditor\"), new FancyEditing data\n      window.ED2 = new LeisureEditCore $(\"#plainEditor\"), new PlainEditing data\n      setTimeout (->editor.loadURL \"example.lorg\"), 1\n"
  ]
}